name: CI/CD Workflow

# workflow를 재실행하는 트리거
on:
  push:
    branches:
      - main
      
# 재실행되면 수행할 작업들
jobs:

# 작업1: 테스트코드 검사
  test:
    runs-on: ubuntu-latest
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      PORT: ${{ secrets.PORT }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
        
      - name: Run test
        run: npm test

# 작업2: 빌드
  build:
    needs: test
    runs-on: ubuntu-latest
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      PORT: ${{ secrets.PORT }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
    steps:
      - name: Docker Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.6.1
        with:
          path: /temp/.build-cache
          key: ${{runner.os}}-buildx-${{github.sha}}
          restore-keys: |
            ${{runner.os}}-buildx-
            
      - name: Login to Github container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GHCR_TOKEN}}
          
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/sangddong/my-image:latest

# 작업3: 배포
  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, sangddong]
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      PORT: ${{ secrets.PORT }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
    steps:
      - name: Login to Github container registry
        uses: docker/login-action@v3.3.0
        with: 
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GHCR_TOKEN}}

      - name: Verify Docker Login
        run: |
          echo ${{secrets.GHCR_TOKEN}} | sudo docker login ghcr.io -u ${{github.actor}} --password-stdin
          
      - name: Docker run
        run: |
          sudo docker stop temp-container-name || true
          sudo docker rm temp-container-name || true
          sudo docker rmi ghcr.io/sangddong/my-image:latest || true
          sudo docker run -d -p 80:3001 \
          --name temp-container-name \
          --restart always \
          -e PORT=${{ secrets.PORT }} \
          -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
          ghcr.io/sangddong/my-image:latest
